import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useQuery } from "react-query";
import ArticleCard from "../components/articleCard";
import styles from "../styles/Home.module.css";
import { Article, fetchArticles } from "../utils/api";

const Home: NextPage = () => {
  const articlesResponse = useQuery("articles", fetchArticles, {
    cacheTime: 0,
  });
  const [currentArticles, setArticles] = useState({
    articles: [] as Article[],
  });

  const router = useRouter();
  const { pg } = router.query;

  const pageButtons = (pg: number) => {
    const pageButtonElements = [];
    for (let i = 1; i <= pg;  i++) {
      pageButtonElements.push(
        <button
          key={i}
          onClick={() => {
            router.push(`/?pg=${i}`, undefined);
          }}
          className="hover:bg-gray-700 hover:text-white mx-2 font-bold py-2 px-4 border rounded-lg"
        >
          {i}
        </button>
      );
    }
    return pageButtonElements;
  };

  useEffect(() => {
    if (articlesResponse.data && articlesResponse.status === "success") {
      const numPg = pg ? Number.parseInt(pg as string) : 1;
      const min = numPg * 5 - 5;
      // pg1 = 5 * 1 = 5
      const max = numPg * 5;

      console.log('articles', articlesResponse.data.articles)
      setArticles({
        articles: articlesResponse.data.articles.slice(min, max),
      });
    }
  }, [pg, articlesResponse.data, articlesResponse.status]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Tactable Front End Challenge - Kavin Jey</title>
        <meta
          name="description"
          content="Generated by create next app, and fulfills set out requirements."
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Blog Articles</h1>

        <div className="flex">{}</div>

        <p className={styles.description}>
          The five latest blog posts, served hot off the press!
        </p>

        {articlesResponse.isSuccess && (
          <div className="flex">
            {pageButtons(articlesResponse.data.numberOfPages)}{" "}
          </div>
        )}
        {articlesResponse.isLoading && (
          <div className="animate-pulse transition m-5 ">
            <h1 className="text-2xl">Loading... </h1>
          </div>
        )}
        <div className={styles.grid}>
          {articlesResponse.isSuccess &&
            currentArticles.articles.map((article) => (
              <ArticleCard key={article.id} {...article} />
            ))}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
